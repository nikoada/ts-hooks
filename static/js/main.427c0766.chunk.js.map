{"version":3,"sources":["UseStateComponent.tsx","UseEffectComponent.tsx","store.ts","UseContextComponent.tsx","UseReducerComponent.tsx","UseRefComponent.tsx","CustomHookComponent.tsx","EvenMoreReactComponent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UseStateComponent","useState","arr","setArr","name","setName","onClick","length","JSON","stringify","UseEffectComponent","val","setVal","useEffect","timer","window","setInterval","v","clearInterval","initialState","first","last","context","createContext","ConsumerComponent","user","useContext","UserContext","UseContextComponent","setUser","Provider","value","counter","counterReducer","state","action","type","payload","Error","UseReducerComponent","useReducer","dispatch","UseRefComponent","inputRef","useRef","ref","CustomHookComponent","data","url","setData","done","setDone","fetch","then","resp","json","useFetchData","portlandTaps","useMemo","filter","bev","producerLocation","includes","src","logo","alt","Heading","title","List","items","render","map","item","index","TestComponent","str","App","EvenMoreReactComponent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.427c0766.chunk.js","sourcesContent":["import { useState } from 'react';\n\nfunction UseStateComponent() {\n    const [arr, setArr] = useState<number[]>([]);\n    const [name, setName] = useState<string | null>(null);\n    \n    return (\n        <div>\n            <div>\n                <button onClick={() => setArr([...arr, arr.length + 1])}>Add to array</button>\n                {JSON.stringify(arr)}\n            </div>\n            <div>\n                <button onClick={() => setName(\"jack\")}>Set name</button>\n                {JSON.stringify(name)}\n            </div>\n        </div>\n    )\n}\n\nexport default UseStateComponent;","import { useState, useEffect } from 'react';\n\nfunction UseEffectComponent() {\n    const [val, setVal] = useState(1);\n\n    useEffect(() => {\n        const timer = window.setInterval(() => {\n            setVal(v => v +1);\n        }, 1000);\n        return () => window.clearInterval(timer);\n    }, []);\n\n    return <div>{val}</div>;\n}\n\nexport default UseEffectComponent;","import { createContext } from \"react\";\n\nconst initialState = {\n    first: \"Jack\",\n    last: \"Herrington\"\n};\n\nexport type UserState = typeof initialState;\n\nconst context = createContext<typeof initialState>(initialState);\n\nexport default context;","import { useContext, useState } from 'react';\n\nimport UserContext, { UserState } from './store';\n\nfunction ConsumerComponent() {\n    const user = useContext<UserState>(UserContext);\n\n    return (\n        <div>\n            <div>First: {user.first}</div>\n            <div>Last: {user.last}</div>\n        </div>\n    )\n}\n\nfunction UseContextComponent() {\n    const [user, setUser] = useState<UserState>({\n        first: \"Jane\",\n        last: \"Smith\"\n    });\n    return (\n        <UserContext.Provider value={user}>\n            <ConsumerComponent />\n            <button\n                onClick={() => setUser({\n                    first: \"Josie\",\n                    last: \"Wales\"\n                })}>Change user</button>\n        </UserContext.Provider>\n    )\n    \n}\n\nexport default UseContextComponent;","import { useReducer } from \"react\";\n\nconst initialState = {\n    counter: 100,\n};\n\n\ntype ACTIONTYPES =\n| { type: \"increment\"; payload: number; }\n| { type: \"decrement\"; payload: number; };\n\nfunction counterReducer(state: typeof initialState, action: ACTIONTYPES) {\n    switch(action.type) {\n        case \"increment\":\n            return {\n                ...state,\n                counter: state.counter + action.payload,\n            };\n        case \"decrement\":\n            return {\n                ...state,\n                counter: state.counter - action.payload,\n            };\n        default: \n            throw new Error(\"Bad action\");\n    }\n}\n\nfunction UseReducerComponent() {\n    const [state, dispatch] = useReducer(counterReducer, initialState);\n\n    return(\n        <div>\n            <div>{state.counter}</div>\n            <div>\n                <button onClick={() => dispatch({\n                    type: \"increment\",\n                    payload: 10,\n                })}>Increment</button> |\n                <button onClick={() => dispatch({\n                    type: \"decrement\",\n                    payload: 10,\n                })}>Decrement</button>\n            </div>\n        </div>\n    )\n}\n\nexport default UseReducerComponent;","import { useRef } from \"react\";\n\nfunction UseRefComponent() {\n    const inputRef = useRef<HTMLInputElement | null>(null);\n\n    return (\n        <input ref={inputRef} />\n    )\n}\n\nexport default UseRefComponent;","import { useState, useEffect, useMemo } from \"react\";\n\nexport interface Beverage {\n    name: string,\n    producerName: string,\n    beverageName: string,\n    beverageColor: string,\n    beverageStyle: string,\n    producerLocation: string,\n    abv: number,\n    ibu: number,\n    logo: string,\n    level: number\n  }\n\nfunction useFetchData<Payload>(url: string): {\n    data: Payload | null;\n    done: boolean\n} {\n    const [data, setData] = useState<Payload | null>(null);\n    const [done, setDone] = useState(false);\n\n    useEffect(() => {\n        fetch(url)\n            .then(resp => resp.json())\n            .then((data: Payload) => {\n                setData(data);\n                setDone(true);\n            })\n    }, [url]);\n\n    return {\n        data,\n        done,\n\n    };\n}\n\nfunction CustomHookComponent() {\n    const { data } = useFetchData<Beverage[]>(\"/hv-taplist.json\");\n    const portlandTaps = useMemo(() =>\n    (data || []).filter(bev => bev.producerLocation.includes(\"Portland\")),\n    [data]\n    )\n\n    return <div>\n        {portlandTaps.length && (\n            <img\n                src={portlandTaps![0].logo}\n                alt=\"Beverage logo\"\n            />\n        )}\n    </div>\n}\n\nexport default CustomHookComponent;","import { ReactElement, ReactNode } from \"react\";\nimport { JsxElement } from \"typescript\";\n\nexport interface HeadingProps {\n    title: string;\n}\n\nexport const Heading = ({ title }: HeadingProps) => {\n    return (\n        <h3>{title}</h3>\n    )\n}\n\nexport type ListComponent = <ListItem>({\n    items,\n    render\n}: {\n    items: ListItem[];\n    render: (item: ListItem) => ReactNode;\n }) => ReactElement<JsxElement>;\n\nexport const List: ListComponent = ({ items, render }) => {\n     return (\n         <ul>\n             {items.map((item, index) => (\n                 <li key={index}>\n                     {render(item)}\n                 </li>\n             ))}\n         </ul>\n     )\n }\n\nfunction TestComponent() {\n    return <div>\n        <Heading title=\"Hello\" />\n        <List\n            items={[\"a\", \"b\", \"c\"]}\n            render={(str) => <strong>{str}</strong>}\n        />\n    </div>\n    \n}\n\nexport default TestComponent;","import UseStateComponent from \"./UseStateComponent\";\nimport UseEffectComponent from \"./UseEffectComponent\";\nimport UseContextComponent from \"./UseContextComponent\";\nimport UseReducerComponent from \"./UseReducerComponent\";\nimport UseRefComponent from \"./UseRefComponent\";\nimport CustomHookComponent from \"./CustomHookComponent\";\n\nimport EvenMoreReactComponent from \"./EvenMoreReactComponent\";\n\n\nfunction App() {\n  return (\n    <div>\n      <h1>Even more React component TS stuff</h1>\n      <EvenMoreReactComponent />\n      <h1>Custom Hook</h1>\n      <CustomHookComponent />\n      <h1>useRef</h1>\n      <UseRefComponent />\n      <h1>useReducer</h1>\n      <UseReducerComponent />\n      <h1>useContext</h1>\n      <UseContextComponent />\n      <h1>useEffect</h1>\n      <UseEffectComponent />\n      <h1>useState</h1>\n      <UseStateComponent />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}